<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gumbel on datanalytics</title>
    <link>/tags/gumbel/</link>
    <description>Recent content in gumbel on datanalytics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <lastBuildDate>Fri, 18 Sep 2020 09:13:00 +0000</lastBuildDate><atom:link href="/tags/gumbel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Esto no es práctico, pero sí bonito; bonito, además, de esa forma inasequible a la chusma</title>
      <link>/2020/09/18/esto-no-es-practico-pero-si-bonito-bonito-ademas-de-esa-forma-inasequible-a-la-chusma/</link>
      <pubDate>Fri, 18 Sep 2020 09:13:00 +0000</pubDate>
      
      <guid>/2020/09/18/esto-no-es-practico-pero-si-bonito-bonito-ademas-de-esa-forma-inasequible-a-la-chusma/</guid>
      <description>Va de muestrear los números $latex 1, \dots, n$ que tienen asignadas probabilidades $latex p_1, \dots, p_n$. Una manera muy impráctica (en R, basta usar sample) y nada intuitiva de hacerlo es recurriendo a la distribución de Gumbel:
library(evd) pes &amp;lt;- runif(5) pes &amp;lt;- pes / sum(pes) gammas &amp;lt;- log(pes) + 2 x &amp;lt;- rgumbel(length(pes)) muestra &amp;lt;- which.max(gammas + x)  O, en masa, aplicando
get_samples &amp;lt;- function(n){ replicate(n, { x &amp;lt;- rgumbel(length(pes)) which.</description>
    </item>
    
  </channel>
</rss>
