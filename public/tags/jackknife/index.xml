<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jackknife on datanalytics</title>
    <link>/tags/jackknife/</link>
    <description>Recent content in jackknife on datanalytics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <lastBuildDate>Fri, 30 Sep 2011 06:52:59 +0000</lastBuildDate><atom:link href="/tags/jackknife/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dont be loopy! (III: jackknife y paralelismo)</title>
      <link>/2011/09/30/dont-be-loopy-iii-jackknife-y-paralelismo/</link>
      <pubDate>Fri, 30 Sep 2011 06:52:59 +0000</pubDate>
      
      <guid>/2011/09/30/dont-be-loopy-iii-jackknife-y-paralelismo/</guid>
      <description>Esta es la tercera entrega de una serie de artículos en los que comparo SAS y R a la hora de realizar diversos tipos de simulaciones basados en Don&amp;rsquo;t Be Loopy: Re-Sampling and Simulation the SAS® Way.
Esta vez toca compararlos a la hora de aplicar el método del jackknife.
Primero, el código SAS que recomienda el autor del artículo, que calcula la curtosis de un conjunto de datos trivial (una muestra de 10k valores que siguen una distribución uniforme):</description>
    </item>
    
  </channel>
</rss>
