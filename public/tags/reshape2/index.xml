<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>reshape2 on datanalytics</title>
    <link>/tags/reshape2/</link>
    <description>Recent content in reshape2 on datanalytics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <lastBuildDate>Wed, 25 Jan 2017 08:13:47 +0000</lastBuildDate><atom:link href="/tags/reshape2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>El número efectivo de partidos</title>
      <link>/2017/01/25/el-numero-efectivo-de-partidos/</link>
      <pubDate>Wed, 25 Jan 2017 08:13:47 +0000</pubDate>
      
      <guid>/2017/01/25/el-numero-efectivo-de-partidos/</guid>
      <description>El número efectivo de partidos es el nombre de una página de la Wikipedia, que contiene la fórmula
$latex N = \frac{1}{\sum_i p_i^2}$
y excipiente alrededor.
Aplicada a España (usando datos del CIS como proxy),
Como casi siempre, el código:
library(rvest) library(rvest) library(reshape2) library(plyr) library(zoo) url &amp;lt;- &amp;quot;http://www.cis.es/cis/export/sites/default/-Archivos/Indicadores/documentos_html/sB606050010.html&amp;quot; raw &amp;lt;- read_html(url) tmp &amp;lt;- html_nodes(raw, &amp;quot;table&amp;quot;) tmp &amp;lt;- html_table(tmp[[2]], fill = TRUE) colnames(tmp)[1] &amp;lt;- &amp;quot;partido&amp;quot; tmp &amp;lt;- tmp[!is.na(tmp$partido),] tmp &amp;lt;- tmp[1:30,] tmp &amp;lt;- melt(tmp, id.</description>
    </item>
    
    <item>
      <title>Melt y cast en Spark con scala</title>
      <link>/2016/05/17/melt-y-cast-en-spark-con-scala/</link>
      <pubDate>Tue, 17 May 2016 08:13:04 +0000</pubDate>
      
      <guid>/2016/05/17/melt-y-cast-en-spark-con-scala/</guid>
      <description>Trabajar con Spark usando Scala implica renunciar a ese paraíso que son las funciones melt y (d)cast de reshape2.
¿O no?
&amp;lt;span style=&amp;quot;color:#069;font-weight:700&amp;quot;&amp;gt;import &amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;org.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;apache.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;spark.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;sql.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;types.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;StructField; &amp;lt;span style=&amp;quot;color:#069;font-weight:700&amp;quot;&amp;gt;import &amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;org.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;apache.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;spark.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;sql.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;types.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;StructType; &amp;lt;span style=&amp;quot;color:#069;font-weight:700&amp;quot;&amp;gt;import &amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;org.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;apache.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;spark.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;sql.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;types.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;StringType; &amp;lt;span style=&amp;quot;color:#069;font-weight:700&amp;quot;&amp;gt;import &amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;org.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;apache.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;spark.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;sql.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;types.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;DoubleType; &amp;lt;span style=&amp;quot;color:#069;font-weight:700&amp;quot;&amp;gt;import &amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;org.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;apache.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;spark.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;sql.&amp;lt;span style=&amp;quot;color:#0053ff;font-weight:700&amp;quot;&amp;gt;Row; &amp;lt;span style=&amp;quot;color:#af82d4&amp;quot;&amp;gt;/** Create some data **/ &amp;lt;span style=&amp;quot;color:#069;font-weight:700&amp;quot;&amp;gt;val nrows = &amp;lt;span style=&amp;quot;color:#a8017e&amp;quot;&amp;gt;20 &amp;lt;span style=&amp;quot;color:#069;font-weight:700&amp;quot;&amp;gt;val origDF = sc.</description>
    </item>
    
    <item>
      <title>Datos en formato largo y melt</title>
      <link>/2015/03/12/datos-en-formato-largo-y-melt/</link>
      <pubDate>Thu, 12 Mar 2015 08:13:21 +0000</pubDate>
      
      <guid>/2015/03/12/datos-en-formato-largo-y-melt/</guid>
      <description>En ocasiones uno recibe datos no muy distintos de
aragon &amp;lt;- read.table(&amp;quot;http://datanalytics.com/uploads/pob_aragon&amp;quot;, header = T, sep = &amp;quot;\t&amp;quot;) aragon # Provincias Periodo Hombres Mujeres # 1 Huesca 2014 113840 111069 # 2 Huesca 2004 107961 104940 # 3 Teruel 2014 71449 68916 # 4 Teruel 2004 71073 68260 # 5 Zaragoza 2014 471675 488436 # 6 Zaragoza 2004 441840 455510  Los mismos datos en formato largo son:
library(reshape2) aragon.largo &amp;lt;- melt(aragon, id.</description>
    </item>
    
  </channel>
</rss>
