<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rulefit on datanalytics</title>
    <link>/tags/rulefit/</link>
    <description>Recent content in rulefit on datanalytics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <lastBuildDate>Fri, 19 Jun 2020 09:13:00 +0000</lastBuildDate><atom:link href="/tags/rulefit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RuleFit</title>
      <link>/2020/06/19/rulefit/</link>
      <pubDate>Fri, 19 Jun 2020 09:13:00 +0000</pubDate>
      
      <guid>/2020/06/19/rulefit/</guid>
      <description>El otro día me sentí culpable porque me preguntaron sobre RuleFit y tuve que hacer un Simón (aka, me lo estudio para mañana). Y como mañana fue antier, lo que sigue.
Hay descripciones estándar de RuleFit (p.e., esta o la del artículo original) pero me voy a atrever con una original de mi propio cuño.
Comenzamos con lasso. Lasso está bien, pero tiene una limitación sustancial: se le escapan las iteracciones (vale, admito que lo anterior no es universalmente exacto, pero lo es casi y eso me vale).</description>
    </item>
    
    <item>
      <title>Bagging y boosting, hermanados</title>
      <link>/2020/06/18/bagging-y-boosting-hermanados/</link>
      <pubDate>Thu, 18 Jun 2020 09:13:00 +0000</pubDate>
      
      <guid>/2020/06/18/bagging-y-boosting-hermanados/</guid>
      <description>Ambas son heurísticas para construir modelos buenos a partir de la combinación de modelos malos. Con la diferencia —¿recordáis los condensadores de la física de bachillerato?— de que en un caso se colocan en paralelo y en el otro, en serie.
Entran Friedman y Popescu (algoritmo 1):
Y, tachán:
 Bagging, si $latex \nu = 0$ * Boosting otherwise.  </description>
    </item>
    
  </channel>
</rss>
