<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on datanalytics</title>
    <link>/tags/python/</link>
    <description>Recent content in python on datanalytics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <lastBuildDate>Wed, 14 Jul 2021 09:13:00 +0000</lastBuildDate><atom:link href="/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mi apuesta para el larguísimo plazo: Julia</title>
      <link>/2021/07/14/mi-apuesta-para-el-larguisimo-plazo-julia/</link>
      <pubDate>Wed, 14 Jul 2021 09:13:00 +0000</pubDate>
      
      <guid>/2021/07/14/mi-apuesta-para-el-larguisimo-plazo-julia/</guid>
      <description>Larguísimo, arriba, significa algo así como 10 o 20 años. Vamos, como cuando comencé con R allá por el 2001. * R es, reconozcámoslo, un carajal. Pocas cosas mejores que esta para convencerse. * No dejo de pensar en aquello que me dijo un profesor en 2001: que R no podría desplazar a SAS porque no tenía soporte modelos mixtos. Yo no sabía qué eran los modelos mixtos en esa época pero, desde entonces, vine a entender y considerar que &amp;ldquo;tener soporte para modelos mixtos&amp;rdquo; venía a ser como aquello que convertía a un lenguaje para el análisis de datos en una alternativa viable y seria a lo existente.</description>
    </item>
    
    <item>
      <title>Programación lineal, de nuevo</title>
      <link>/2020/06/04/programacion-lineal-de-nuevo/</link>
      <pubDate>Thu, 04 Jun 2020 12:14:46 +0000</pubDate>
      
      <guid>/2020/06/04/programacion-lineal-de-nuevo/</guid>
      <description>Hoy me he retrasado en escribir por haber estado probando (y estresando, como hay quien dice), software para resolver problemas de programación lineal. En total, nada, unos diez millones de variables unos treinta millones de restricciones.
Nota: es un problema LP puro, nada de enteros, nada de pérdidas no lineales, etc.
 Primera opción: Python + PuLP + CBC (de COIN-OR), que es el optimizador por defecto de PuLP. Rendimiento aceptable para el tipo de uso que se le acabaría dando.</description>
    </item>
    
    <item>
      <title>&#34;Para razonar rigurosamente bajo incertidumbre hay que recurrir al lenguaje de la probabilidad&#34;</title>
      <link>/2020/03/03/para-razonar-rigurosamente-bajo-incertidumbre-hay-que-recurrir-al-lenguaje-de-la-probabilidad/</link>
      <pubDate>Tue, 03 Mar 2020 09:13:00 +0000</pubDate>
      
      <guid>/2020/03/03/para-razonar-rigurosamente-bajo-incertidumbre-hay-que-recurrir-al-lenguaje-de-la-probabilidad/</guid>
      <description>Así arranca este artículo, que presenta una extensión de XGBoost para predicciones probabilísticas. Es decir, un paquete que promete no solo una estimación del valor central de la predicción sino de su distribución.
La versión equivalente de lo anterior en el mundo de los random forests está descrito aquí, disponible aquí y mucho me temo que muy pronto voy a poder contar por aquí si está a la altura de las expectativas.</description>
    </item>
    
    <item>
      <title>Curso de python básico orientado al análisis de datos</title>
      <link>/2020/01/14/curso-de-python-basico-orientado-al-analisis-de-datos/</link>
      <pubDate>Tue, 14 Jan 2020 14:17:00 +0000</pubDate>
      
      <guid>/2020/01/14/curso-de-python-basico-orientado-al-analisis-de-datos/</guid>
      <description>Se acaba de publicar en GitHub el/nuestro Curso de python básico orientado al análisis de datos.
Digo nuestro un tanto impropiamente: casi todo el material es de Luz Frías, mi socia en Circiter. Mía hay alguna cosa suelta.
Como como minicoautor soy el comentarista menos creíble del contenido, lo dejo al juicio de cada cual. Y, por supuesto, se agradecen correcciones, comentarios, cañas y fusilamientos (con la debida caballerosidad, por supuesto, en lo de las atribuciones).</description>
    </item>
    
    <item>
      <title>Charla en el CodingClub de la UC3M este martes</title>
      <link>/2019/12/16/charla-en-el-codingclub-de-la-uc3m-este-martes/</link>
      <pubDate>Mon, 16 Dec 2019 09:13:00 +0000</pubDate>
      
      <guid>/2019/12/16/charla-en-el-codingclub-de-la-uc3m-este-martes/</guid>
      <description>Este martes 17 de diciembre hablaré durante una hora sobre (cierto tipo de) big data y modelos adecuados para modelizarlos en el CodingClub de la Universidad Carlos III.
 El contenido de la charla, entiendo, se publicará también después en el blog del CodingClub. * Los detalles (sitio, hora, etc.) están en el enlace indicado más arriba. * Obviamente, agradezco a los organizadores del CodingClub por haberme invitado. Espero no estar arrepentido el martes por la tarde de lo siguiente: es el ciclo de charlas sobre _cosas relacionadas con datos _más seria y mejor organizada que conozco.</description>
    </item>
    
    <item>
      <title>Sobre los coeficientes de los GLM en Scikit-learn</title>
      <link>/2019/12/02/sobre-los-coeficientes-de-los-glm-en-scikit-learn/</link>
      <pubDate>Mon, 02 Dec 2019 09:13:00 +0000</pubDate>
      
      <guid>/2019/12/02/sobre-los-coeficientes-de-los-glm-en-scikit-learn/</guid>
      <description>Pensé que ya había escrito sobre el asunto porque tropecé con él en un proyecto hace un tiempo. Pero mi menoria se había confundido con otra entrada, Sobre la peculiarisima implementacion del modelo lineal en (pseudo-)Scikit-learn, donde se discute, precisamente, un problema similar si se lo mira de cierta manera o diametralmente opuesto si se ve con otra perspectiva.
Allí el problema era que Scikit-learn gestionaba muy sui generis el insidioso problema de la colinealidad.</description>
    </item>
    
    <item>
      <title>Pyro</title>
      <link>/2019/10/14/pyro/</link>
      <pubDate>Mon, 14 Oct 2019 09:13:35 +0000</pubDate>
      
      <guid>/2019/10/14/pyro/</guid>
      <description>Leyendo sobre si dizque PyTorch le siega la hierba debajo de los pies a TensorFlow, averigué la existencia de Pyro.
Pyro se autopresenta como Deep Universal Probabilistic Programming, pero aplicando métodos porfirianos (ya sabéis: género próximo y diferencia específica), es, o pretende ser, Stan en Python y a escala.
Aquí van mis dos primeras impresiones, basadas en una inspección superficial de los tutoriales.
En primer lugar, aunque Pyro permite usar (distintas versiones de) MCMC, parece que su especialidad es la inferencia variacional estocástica.</description>
    </item>
    
    <item>
      <title>¿Qué variable distingue mejor dos subgrupos?</title>
      <link>/2019/09/24/que-variable-distingue-mejor-dos-subgrupos/</link>
      <pubDate>Tue, 24 Sep 2019 09:13:25 +0000</pubDate>
      
      <guid>/2019/09/24/que-variable-distingue-mejor-dos-subgrupos/</guid>
      <description>Es una pregunta que surge reiteradamente. Por ejemplo, cuando se compara un clúster con el resto de la población y uno busca las variables que mejor lo caracterizan. Y crear gráficos como
(extraído de aquí) donde las variables están ordenadas de acuerdo con su poder discriminador.
Mi técnica favorita para crear tales indicadores es la EMD (earth mover&amp;rsquo;s distance) y/o sus generalizaciones, muy bien descritas en Optimal Transport and Wasserstein Distance y disponibles en R y Python.</description>
    </item>
    
    <item>
      <title>Los modelos mixtos en Python son un bien público pero quienes debieran proveerlo están a otra cosa</title>
      <link>/2019/09/17/los-modelos-mixtos-en-python-son-un-bien-publico-pero-quienes-debieran-proveerlo-estan-a-otra-cosa/</link>
      <pubDate>Tue, 17 Sep 2019 09:13:45 +0000</pubDate>
      
      <guid>/2019/09/17/los-modelos-mixtos-en-python-son-un-bien-publico-pero-quienes-debieran-proveerlo-estan-a-otra-cosa/</guid>
      <description>Los modelos mixtos en Python son un bien público.
El sector privado no produce suficientes bienes públicos (con excepciones tan notables como las búsquedas en Google o las páginas aún sin paywall de los periódicos). El sector público y los impuestos que lo financian argumenta la conveniencia de su propia existencia en términos de esa provisión de bienes públicos que dizque realiza.
Pero ese subsector del sector público que debería implementar los modelos mixtos en Python se dedica a otra cosa.</description>
    </item>
    
    <item>
      <title>Sobre la peculiarísima implementación del modelo lineal en (pseudo-)scikit-learn</title>
      <link>/2019/07/17/sobre-la-peculiarisima-implementacion-del-modelo-lineal-en-pseudo-scikit-learn/</link>
      <pubDate>Wed, 17 Jul 2019 09:13:55 +0000</pubDate>
      
      <guid>/2019/07/17/sobre-la-peculiarisima-implementacion-del-modelo-lineal-en-pseudo-scikit-learn/</guid>
      <description>Si ejecutas
import numpy as np from sklearn.linear_model import LinearRegression n = 1000 X = np.random.rand(n, 2) Y = np.dot(X, np.array([1, 2])) + 1 + np.random.randn(n) / 2 reg = LinearRegression().fit(X, Y) reg.intercept_ reg.coef_  se obtiene más o menos lo esperado. Pero si añades una columna linealmente dependiente,
X = np.column_stack((X, 1 * X[:,1]))  ocurren cosas de la más calamitosa especie:
Y = np.dot(X, np.array([1, 2, 1])) + 1 + np.</description>
    </item>
    
    <item>
      <title>Mi infraestructura para Python</title>
      <link>/2019/06/06/mi-infraestructura-para-python/</link>
      <pubDate>Thu, 06 Jun 2019 09:13:52 +0000</pubDate>
      
      <guid>/2019/06/06/mi-infraestructura-para-python/</guid>
      <description>Resumen:
 He decidido usar RStudio como IDE para Python. RStudio no es el mejor IDE para desarrollar, pero es incomparablemente mejor que cualquier otro IDE para explorar, etc. Funciona muy bien y solo puede mejorar. * He decidido pasar de Jupyter. Los notebooks valen para lo que valen, pero no para lo que hago. En caso de necesidad, uso Rmarkdown con bloques de Python. De nuevo, funcionan muy bien y solo pueden mejorar.</description>
    </item>
    
    <item>
      <title>Sr. Python, muchas gracias por su candidatura; ya le llamaremos cuando... tenga modelos mixtos</title>
      <link>/2019/02/12/sr-python-muchas-gracias-por-su-candidatura-ya-le-llamaremos-cuando-tenga-modelos-mixtos/</link>
      <pubDate>Tue, 12 Feb 2019 08:13:49 +0000</pubDate>
      
      <guid>/2019/02/12/sr-python-muchas-gracias-por-su-candidatura-ya-le-llamaremos-cuando-tenga-modelos-mixtos/</guid>
      <description>Era casi todavía el siglo XX cuando yo, desesperado por hacer cosas que consideraba normales y que SAS no me permitía, pregunté a un profesor por algo como C pero para estadística. Y el profesor me contó que conocía a alguien que conocía a alguien que conocía a alguien que usaba una cosa nueva que se llamaba R y que podía servirme.
Fue amor a primera vista, pero esa es otra historia.</description>
    </item>
    
    <item>
      <title>Extingámonos con dignidad: generaciones actuales y futuras, no incurramos en los errores de las anteriores</title>
      <link>/2018/10/08/extingamonos-con-dignidad-generaciones-actuales-y-futuras-no-incurramos-en-los-errores-de-las-anteriores/</link>
      <pubDate>Mon, 08 Oct 2018 08:13:43 +0000</pubDate>
      
      <guid>/2018/10/08/extingamonos-con-dignidad-generaciones-actuales-y-futuras-no-incurramos-en-los-errores-de-las-anteriores/</guid>
      <description>Participé el otro día en una cena con gente friqui. Constaté con cierto desasosiego cómo han virado los sujetos pasivos de nuestra indignación profesional a lo largo de los años.
Antaño, fueron los viejos que seguían apegados a la paleoinformática. Hogaño, los primíparos que usan Python y desdeñan R.
Tengo sentimientos encontrados y no sé qué más añadir.</description>
    </item>
    
    <item>
      <title>Un generador de datos sintéticos para proteger la privacidad de los microdatados</title>
      <link>/2018/05/23/un-generador-de-datos-sinteticos-para-proteger-la-privacidad-de-los-microdatados/</link>
      <pubDate>Wed, 23 May 2018 08:13:19 +0000</pubDate>
      
      <guid>/2018/05/23/un-generador-de-datos-sinteticos-para-proteger-la-privacidad-de-los-microdatados/</guid>
      <description>DataSynthesizer (véase también el correspondiente artículo) es un programa en Python que:
 1. Toma una tabla de datos (microdatos, de hecho) que contiene información confidencial. 2. Genera otra _aleatoria_ pero que conserva (¿los conservará?) la estructura básica de la información subyacente (conteos, correlaciones, etc.).  Está pensado para poder realizar el análisis estadístico de (determinados) datos sin verlos propiamente.
Particularmente interesante es el algoritmo para preservar la correlación entre columnas.</description>
    </item>
    
    <item>
      <title>Una comparación de lenguajes de programación en una esquinita pequeña de la economía</title>
      <link>/2017/10/06/una-comparacion-de-lenguajes-de-programacion-en-una-esquinita-pequena-de-la-economia/</link>
      <pubDate>Fri, 06 Oct 2017 08:13:55 +0000</pubDate>
      
      <guid>/2017/10/06/una-comparacion-de-lenguajes-de-programacion-en-una-esquinita-pequena-de-la-economia/</guid>
      <description>El título, no el de esta entrada sino el de A Comparison of Programming Languages in Economics, es una sinécdoque confusa.
Que nadie busque en él consejo sobre qué lenguaje estudiar si le interesa el mundo de la economía (en general). O fuera de ella (también en general).
Encontrará más bien la implementación de la solución a un único problema dentro de los muchos que supongo comprende esa disciplina. Uno, además, con el que no he visto (en persona) a economista alguno ganarse el pan ni en la academia ni fuera de ella.</description>
    </item>
    
    <item>
      <title>Python y R: una perspectiva markoviana</title>
      <link>/2017/09/06/python-y-r-una-perspectiva-markoviana/</link>
      <pubDate>Wed, 06 Sep 2017 08:13:16 +0000</pubDate>
      
      <guid>/2017/09/06/python-y-r-una-perspectiva-markoviana/</guid>
      <description>Hoy he visto
aquí y he escrito
m &amp;lt;- matrix(c(74, 15, 10, 1, 11, 50, 38, 1, 5, 4, 90, 1, 17, 4, 19, 60), 4, 4, byrow = TRUE) m &amp;lt;- m / 100  luego
m %*% m %*% m %*% m %*% m %*% m %*% m %*% m %*% m %*% m %*% m %*% m %*% m%*% m%*% m%*% m%*% m%*% m%*% m %*% m %*% m %*% m %*% m %*% m %*% m %*% m %*% m %*% m %*% m %*% m %*% m%*% m%*% m%*% m%*% m%*% m%*% m # [,1] [,2] [,3] [,4] #[1,] 0.</description>
    </item>
    
    <item>
      <title>Un curso de 15 horas de introducción a la programación</title>
      <link>/2016/09/19/un-curso-de-15-horas-de-introduccion-a-la-programacion/</link>
      <pubDate>Mon, 19 Sep 2016 08:13:31 +0000</pubDate>
      
      <guid>/2016/09/19/un-curso-de-15-horas-de-introduccion-a-la-programacion/</guid>
      <description>Hoy comienzo a enseñar un curso de introducción a la programación para recién graduados que comenzarán un máster de matemáticas aplicadas con incursiones en la llamada ciencia de datos. Serán 4 sesiones con el siguiente contenido:
 * Sesión 1, programación imperativa: variables, condicionales y bucles. * Sesión 2, programación orientada a objetos. * Sesión 3, colecciones: listas, tuplas, conjuntos, diccionarios, etc. * Sesión 4, programación funcional: _map_, _reduce_, _fold_, _foldLeft_, _scan_, _filter_, etc.</description>
    </item>
    
    <item>
      <title>Rmd2R: un conversor de lo que su propio nombre indica</title>
      <link>/2016/05/25/rmd2r-un-conversor-de-lo-que-su-propio-nombre-indica/</link>
      <pubDate>Wed, 25 May 2016 08:13:07 +0000</pubDate>
      
      <guid>/2016/05/25/rmd2r-un-conversor-de-lo-que-su-propio-nombre-indica/</guid>
      <description>Mis clases de/con R suelen consistir en un guión que es un programa en R con muchos comentarios y ejercicios. Con el tiempo, estos últimos tienden a crecer hasta el punto de que se convierte casi en un fichero de texto comentado con aspersión —en su acepción no-DRAE de efecto— de líneas de código.
Mejor, me he dicho recientemente, usar Rmarkdown.
Pero Rmarkdown sirve para lo que sirve: como fuente para compilar ficheros pensados para ser leídos por seres humanos.</description>
    </item>
    
    <item>
      <title>rPython &#43; feather</title>
      <link>/2016/04/06/rpython-feather/</link>
      <pubDate>Wed, 06 Apr 2016 09:13:28 +0000</pubDate>
      
      <guid>/2016/04/06/rpython-feather/</guid>
      <description>Supongo que a estas alturas todos conoceréis feather y rPython. Hoy los vais a ver trabajar juntos.
Primero solo en R:
library(feather) path &amp;lt;- &amp;quot;/tmp/my_data.feather&amp;quot; write_feather(&amp;lt;a href=&amp;quot;http://inside-r.org/r-doc/datasets/cars&amp;quot;&amp;gt;cars, path) my_cars &amp;lt;- read_feather(path)  Ahora, para pasarle datos a Python:
library(rPython) python.exec(&amp;quot;import feather&amp;quot;) python.exec(&amp;quot;a = feather.read_dataframe(&#39;/tmp/my_data.feather&#39;)&amp;quot;) python.exec(&amp;quot;print a&amp;quot;)  Y, finalmente, para crear datos grandes en Python y devolvéselos a R:
python.exec(&amp;quot;import numpy as np&amp;quot;) python.exec(&amp;quot;import pandas as pd&amp;quot;) python.exec(&amp;quot;arr = np.random.randn(10000000)&amp;quot;) python.</description>
    </item>
    
    <item>
      <title>¿Jupyter? Me quedo con Rodeo, creo</title>
      <link>/2016/03/17/jupyter-me-quedo-con-rodeo-creo/</link>
      <pubDate>Thu, 17 Mar 2016 09:13:06 +0000</pubDate>
      
      <guid>/2016/03/17/jupyter-me-quedo-con-rodeo-creo/</guid>
      <description>Ayer, después de mucho tiempo, perdí horas de sueño enredando con Jupyter. Y mi sensación fue la misma que hace un año: está bien para presentaciones, cursos y en definitiva, contenido cerrado y estructurado que para el cacharreo diario. ¡Echo en falta un lugar en el que equivocarme reiteradamente!
En RStudio, al menos, dispongo de la consola y de algún programa que uso como espacio de borrador. En Jupyter me siento como obligado a comportarme como esos niños repelentes que tomaban apuntes directamente a limpio.</description>
    </item>
    
    <item>
      <title>PyData Madrid 2016, en abril de este año</title>
      <link>/2016/01/28/pydata-madrid-2016-en-abril-de-este-ano/</link>
      <pubDate>Thu, 28 Jan 2016 09:13:28 +0000</pubDate>
      
      <guid>/2016/01/28/pydata-madrid-2016-en-abril-de-este-ano/</guid>
      <description>Me llegan noticias de PyData Madrid 2016, que tendrá lugar en abril de este año en Madrid:
Como son conferencias hechas por desarrolladores y usuarios y para desarrolladores y usuarios el ambiente es muy informal y más enfocado a los científicos que a las empresas y venta de producto. Por eso nos encantan y por eso nos metemos en estos embolados.
Al final, hemos de ser políglotas y usar todas las fortalezas de nuestros lenguajes preferidos.</description>
    </item>
    
    <item>
      <title>Pasando data.frames de R como tablas de pandas en Python usando rPython</title>
      <link>/2015/12/11/pasando-data-frames-de-r-como-tablas-de-pandas-en-python-usando-rpython/</link>
      <pubDate>Fri, 11 Dec 2015 08:13:41 +0000</pubDate>
      
      <guid>/2015/12/11/pasando-data-frames-de-r-como-tablas-de-pandas-en-python-usando-rpython/</guid>
      <description>Un usuario de rPython, David González Knowles, me ha facilitado su código para pasar una tabla, iris en este caso, de R a una tabla de pandas en Python usando mi paquete.
En R hay tablas de serie. En Python no. La librería pandas de Python implementa algo parecido a los data.frames. Solo que nada garantiza que un usuario de Python la tenga instalada. Por eso no hay un formato de destino claro y universal para las tablas de R a través de rPython.</description>
    </item>
    
    <item>
      <title>agate: análisis de datos optimizado para humanos (y no para máquinas)</title>
      <link>/2015/11/17/agate-analisis-de-datos-optimizado-para-humanos-y-no-para-maquinas/</link>
      <pubDate>Tue, 17 Nov 2015 08:13:11 +0000</pubDate>
      
      <guid>/2015/11/17/agate-analisis-de-datos-optimizado-para-humanos-y-no-para-maquinas/</guid>
      <description>Una de las cosas que menos me canso de repetir es que R no es (solo) un lenguaje de programación. R es un entorno para el análisis de datos. Los informáticos se horrorizan con él: no entienden por qué es como es. Pero, fundamentalmente, su problema es que no conciben que pueda haber sido diseñado para el REPL y no (solamente) para crear programas.
Casi todo el tiempo que paso con R abierto lo consumo trabajando interactivamente, no programando.</description>
    </item>
    
    <item>
      <title>rPython &amp; Anaconda</title>
      <link>/2015/06/22/rpython-anaconda/</link>
      <pubDate>Mon, 22 Jun 2015 08:13:28 +0000</pubDate>
      
      <guid>/2015/06/22/rpython-anaconda/</guid>
      <description>Nota: publico hoy en inglés en atención al público potencial de la entrada.
rPython lets R users call Python code. Anaconda  is a completely free enterprise-ready Python distribution for large-scale data processing, predictive analytics, and scientific computing. Not surprisingly, some users want to call Anaconda Python rather than their system&amp;rsquo;s default Python.
However, Anaconda is a very particular package: unlike most other packages, whose files are scattered in a diversity of locations, it is self contained in a single directory.</description>
    </item>
    
    <item>
      <title>Todo por no RTFM (o cómo usar matplotlib con R)</title>
      <link>/2015/04/16/todo-por-no-rtfm-o-como-usar-matplotlib-con-r/</link>
      <pubDate>Thu, 16 Apr 2015 08:13:26 +0000</pubDate>
      
      <guid>/2015/04/16/todo-por-no-rtfm-o-como-usar-matplotlib-con-r/</guid>
      <description>Quien escribió Call matplotlib from R podía haberse ahorrado bastante trabajo de la peor especie (programación de bajo nivel con C++) leyendo los benditos manuales (de [rPython](http://cran.r-project.org/web/packages/rPython/index.html), en este caso).
Le bastaba hacer
library(rPython) x &amp;lt;- seq(0, 2*pi, length = 100) sx &amp;lt;- sin(x) cx &amp;lt;- cos(x) python.assign(&amp;quot;x&amp;quot;, x) python.assign(&amp;quot;sx&amp;quot;, sx) python.assign(&amp;quot;cx&amp;quot;, cx) python.exec(&amp;quot;import matplotlib.pyplot as plt&amp;quot;) python.exec(&amp;quot;plt.rcParams.update({&#39;figure.figsize&#39; : (7,4)})&amp;quot;) python.exec(&amp;quot;plt.plot(x, sx)&amp;quot;) python.exec(&amp;quot;plt.plot(x, cx, &#39;--r&#39;, linewidth=2) &amp;quot;) python.exec(&amp;quot;plt.legend((&#39;sin(x)&#39;, &#39;cos(x)&#39;))&amp;quot;) python.exec(&amp;quot;plt.savefig(&#39;2015-04-02-pyplot.png&#39;)&amp;quot;)  para obtener</description>
    </item>
    
    <item>
      <title>En serio con Spark: instalación</title>
      <link>/2014/07/18/en-serio-con-spark-instalacion/</link>
      <pubDate>Fri, 18 Jul 2014 07:13:59 +0000</pubDate>
      
      <guid>/2014/07/18/en-serio-con-spark-instalacion/</guid>
      <description>Me he puesto en modo estoy serio con Spark. Lo instalé en mi ya manida máquina virtual (voy a subir una nueva versión de ella pronto), pero hoy la voy a instalar en mi portátil. Y con la idea de, en los próximos días, montar un clúster en condiciones.
Los pasos son los siguientes:
 1. Ir a la [página de descargas](http://spark.apache.org/downloads.html) y seleccionar una versión ya precompilada. Hay varias porque Spark se enlaza con librerías relacionadas con Hadoop (aunque uno puede utilizar Spark perfectamente sin él) y hay varias versiones mutuamente incompatibles de Hadoop.</description>
    </item>
    
    <item>
      <title>plot.ly: visualización de datos multilenguaje</title>
      <link>/2014/05/23/plot-ly-visualizacion-de-datos-multilenguaje/</link>
      <pubDate>Fri, 23 May 2014 07:16:16 +0000</pubDate>
      
      <guid>/2014/05/23/plot-ly-visualizacion-de-datos-multilenguaje/</guid>
      <description>He recibido hoy un correo sobre plot.ly, que es, según sus autores, una herramienta colaborativa para en análisis y la visualización de datos. Gustará seguramente a los interesados en las APIs: en el fondo, el software reside en la nube.
Permite, por ejemplo, [integrar gráficos interactivos en IPython](http://nbviewer.ipython.org/gist/msund/61cdbd5b22c103fffb84). Aunque no he visto ejemplos de cómo integrarlo con [knitr](http://yihui.name/knitr/). A ver si saco algo de tiempo&amp;hellip;</description>
    </item>
    
    <item>
      <title>Los sospechosos habituales y Python</title>
      <link>/2014/03/20/los-sospechosos-habituales-y-python/</link>
      <pubDate>Thu, 20 Mar 2014 08:44:17 +0000</pubDate>
      
      <guid>/2014/03/20/los-sospechosos-habituales-y-python/</guid>
      <description>Llamo sospechosos habituales a esos programas y lenguajes para el análisis de datos distintos de R cuya decreciente popularidad nos parece tan natural a los partidarios de este último. Abundan los análisis de cuotas de mercado tales como What Analytic Software are People Discussing?
¿Cuáles son estos sospechosos habituales? Pues SAS, SPSS y algún otro: Stata, Statistica, Minitab,&amp;hellip;
Sin embargo, R tiene competidores más serios a medio plazo. Uno de ellos, el más importante, es Python.</description>
    </item>
    
    <item>
      <title>¿Cuánta gente usará R (vs Python vs otros) dentro de 1000 años?</title>
      <link>/2013/12/18/cuanta-gente-usara-r-vs-python-vs-otros-dentro-de-1000-anos/</link>
      <pubDate>Wed, 18 Dec 2013 07:23:00 +0000</pubDate>
      
      <guid>/2013/12/18/cuanta-gente-usara-r-vs-python-vs-otros-dentro-de-1000-anos/</guid>
      <description>Pues no lo sé. Seguramente, nadie. Pero como he visto esto (que no es otra forma que una representación palabrera de una matriz de transiciones de Markov) y el debate R vs Python para el análisis de datos ha resonado estos últimos días con cierta fuerza, voy a ensayar un pequeño divertimento matemático que me traslada a una clase práctica de Álgebra I en mis años de estudiante.
Es el siguiente:</description>
    </item>
    
    <item>
      <title>rPython, ya en Windows</title>
      <link>/2013/11/21/rpython-ya-en-windows/</link>
      <pubDate>Wed, 20 Nov 2013 22:43:56 +0000</pubDate>
      
      <guid>/2013/11/21/rpython-ya-en-windows/</guid>
      <description>Aprovechando que por un lado las circunstancias han querido que ahora disfrute de más tiempo libre; que, por otro, mi paquete rPython parece ir ganando aceptación y, finalmente, que tengo varios correos pendientes clamando por una versión en Windows, he pasado unos ratos tratando de hacer el proceso de instalación lo menos pesado y manual que me ha sido posible.
Y el resultado ha sido este.
Así que si alguien todavía sigue usando Windows y tiene interés en interactuar con Python desde R (aunque solo sea por aburrimiento), que lo pruebe.</description>
    </item>
    
    <item>
      <title>rPython ya está en CRAN</title>
      <link>/2013/04/01/rpython-ya-esta-en-cran/</link>
      <pubDate>Mon, 01 Apr 2013 07:08:19 +0000</pubDate>
      
      <guid>/2013/04/01/rpython-ya-esta-en-cran/</guid>
      <description>Después de bastante trabajo, rPython ya está disponible en CRAN, ya es un paquete oficial de R.
Se trata de un paquete del que ya nos hemos ocupado antes (véase esto y esto) y que permite llamar a Python desde R.
Por el momento, está disponible únicamente para plataformas UNIX (Linux, Mac) aunque estoy tratando de crear una versión que funcione en Windows.
Además, estoy buscando aplicaciones de rPython (al estilo de esta).</description>
    </item>
    
    <item>
      <title>Datos LIDAR en R</title>
      <link>/2013/03/06/datos-lidar-en-r/</link>
      <pubDate>Wed, 06 Mar 2013 07:13:58 +0000</pubDate>
      
      <guid>/2013/03/06/datos-lidar-en-r/</guid>
      <description>En la reunión del grupo de interés local (GIL) de R de Madrid, Francisco Mauro habló de aplicaciones de R a conjuntos de datos LIDAR.
En efecto, uno quiere estimar la cantidad de madera que hay en un monte. Uno entonces la calcula en unas pequeñas zonas y luego, barriendo el monte con pulsos de láser desde un avión toma medidas (x,y,z) (es decir, longitud, latitud y altura) en una malla fina de puntos.</description>
    </item>
    
    <item>
      <title>MapReduce con mincedmeat</title>
      <link>/2012/11/07/mapreduce-con-mincedmeat/</link>
      <pubDate>Wed, 07 Nov 2012 14:41:14 +0000</pubDate>
      
      <guid>/2012/11/07/mapreduce-con-mincedmeat/</guid>
      <description>Hace unos días implementé un proceso MapReduce usando mincedmeat, un pequeño entorno en Python para desarrollar este tipo de procesos distribuidos. El código y los datos pueden descargarse de este enlace.
Los datos de partida están en 249 ficheros de unos 25kb que contienen filas del tipo
journals/algorithmica/HarelS98:::David Harel::Meir Sardas:::An Algorithm for Straight-Line of Planar Graphs
es decir, publicación, autor (o autores) separados por :: y título de la publicación. Los tres campos están separados por :::.</description>
    </item>
    
    <item>
      <title>HHH, HHT y el comando &#34;yield&#34; de Python</title>
      <link>/2012/10/26/hhh-hht-y-el-comando-yield-de-python/</link>
      <pubDate>Fri, 26 Oct 2012 07:18:38 +0000</pubDate>
      
      <guid>/2012/10/26/hhh-hht-y-el-comando-yield-de-python/</guid>
      <description>Variable aleatoria X: tiramos una moneda al aire sucesivamente y contamos el número de veces que lo hacemos hasta obtener el patrón HHH (tres caras) en las tres últimas tiradas.
Variable aleatoria Y: lo mismo, pero hasta que salga el patrón HHT.
Entonces las medias de X e Y son iguales, ¿verdad? Pues no. (¿Alguien sabría decirme cuál de las combinaciones, HHH o HHT, tiende, en promedio, a aparecer antes? Pueden darse explicaciones muy complejas, pero existe una muy simple e intuitiva).</description>
    </item>
    
    <item>
      <title>El algoritmo PSLQ e identificación de números</title>
      <link>/2012/09/17/el-algoritmo-pslq-e-identificacion-de-numeros/</link>
      <pubDate>Mon, 17 Sep 2012 07:22:17 +0000</pubDate>
      
      <guid>/2012/09/17/el-algoritmo-pslq-e-identificacion-de-numeros/</guid>
      <description>El algoritmo PSLQ se usa para resolver aproximadamente ecuaciones con coeficientes enteros $latex a_i$ de la forma
$latex \sum_i a_i x_i = 0$
donde, obviamente, no todos los $latex a_i$ son cero. Aproximadamente significa que la solución se busca dentro de un cierto nivel de tolerancia.
No existe, que yo sepa, una implementación en R. Pero sí en Python, usando librerías que permiten utilizar números de precisión arbitraria, como [mpmath](https://code.google.com/p/mpmath/). Veamos un ejemplo:</description>
    </item>
    
    <item>
      <title>R en el Software Developer&#39;s Journal</title>
      <link>/2012/08/22/r-en-el-software-developers-journal/</link>
      <pubDate>Wed, 22 Aug 2012 07:44:56 +0000</pubDate>
      
      <guid>/2012/08/22/r-en-el-software-developers-journal/</guid>
      <description>El Software Developer&amp;rsquo;s Journal ha publicado estos días un número dedicado exclusivamente a R. Dicen que sus 260 páginas hacen de este número el más extenso que ha publicado jamás la revista.

Incluye, además, un artículo mío, Rpython, a package for calling Python from R.
Creo que es necesario registrarse (y probablemente de forma no gratuita) para hojear el volumen. De todos modos tal vez sería posible que pudiese pasarle el número completo a aquellos que deseen echarle un vistazo&amp;hellip;</description>
    </item>
    
    <item>
      <title>¿Siete lenguajes de programación emergentes?</title>
      <link>/2010/10/27/siete-lenguajes-de-programacion-emergentes/</link>
      <pubDate>Wed, 27 Oct 2010 22:21:05 +0000</pubDate>
      
      <guid>/2010/10/27/siete-lenguajes-de-programacion-emergentes/</guid>
      <description>Hace un par de días apareció un artículo en InfoWorld en el que se enumeraban siete lenguajes de programación emergentes. Parece que por emergentes ha de entenderse cada vez más extendidos en la empresa. Como R hacía parte del rol, comencé alegrándome. Después me surgieron dos elementos de sospecha.
Véase la lista de los siete lenguajes seleccionados:
 Python, un viejo conocido. Ruby Matlab JavaScript, que está gozando de una segunda primavera gracias a AJAX y demás R, ¡cómo no!</description>
    </item>
    
    <item>
      <title>Un ilustrador problema de compatibilidad de licencias libres</title>
      <link>/2010/08/05/un-ilustrador-problema-de-compatibilidad-de-licencias-libres/</link>
      <pubDate>Thu, 05 Aug 2010 14:40:52 +0000</pubDate>
      
      <guid>/2010/08/05/un-ilustrador-problema-de-compatibilidad-de-licencias-libres/</guid>
      <description>This whole thing is such a nuisance. It seems one can&amp;rsquo;t even give something away these days!
 Así de infeliz se mostraba G. Grothendieck hace unos días. Y es que habíamos enviado una primera versión del paquete rJython que subir a CRAN y nos encontramos con problemas de licencias.
Eso de las licencias de software es un tema enojoso. Importante, pero enojoso.
Además, da la impresión, que totalmente exótico a la ética y costumbres de este país desde el que escribo: algún día, como divertimento, contaré alguna historieta.</description>
    </item>
    
    <item>
      <title>rJython: un nuevo paquete para llamar a Python desde R</title>
      <link>/2010/07/13/rjython-un-nuevo-paquete-para-llamar-a-python-desde-r/</link>
      <pubDate>Tue, 13 Jul 2010 22:18:03 +0000</pubDate>
      
      <guid>/2010/07/13/rjython-un-nuevo-paquete-para-llamar-a-python-desde-r/</guid>
      <description>Ya está disponible el paquete rJython que permite llamar a Python desde R. Aunque todavía no se ha subido a CRAN, puede instalarse así:
1  install.packages(&amp;#34;rJython&amp;#34;, repos=&amp;#34;http://R-Forge.R-project.org&amp;#34;)   Una vez instalado puede probarse el paquete ejecutando, por ejemplo,
1 2 3 4 5 6 7 8 9 10 11  rJython &amp;lt;- rJython() a &amp;lt;- 1:4 jython.assign(rJython, &amp;#34;a&amp;#34;, a) jython.exec(rJython, &amp;#34;b = len( a )&amp;#34;) jython.get(rJython, &amp;#34;b&amp;#34;) rJython$exec(&amp;#34;import math&amp;#34;) jython.</description>
    </item>
    
  </channel>
</rss>
